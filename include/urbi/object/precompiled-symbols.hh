/**
 ** \file urbi/object/precompiled-symbols.hh
 ** \brief Predefined symbols.
 */

#ifndef URBI_OBJECT_PRECOMPILED_SYMBOLS_HH
# define URBI_OBJECT_PRECOMPILED_SYMBOLS_HH

# define SYMBOLS_APPLY(Macro)			  \
  Macro(AMPERSAND_AMPERSAND, "&&");               \
  Macro(Argument, "Argument");                    \
  Macro(Arity, "Arity");                          \
  Macro(BANG, "!");                               \
  Macro(BANG_EQ, "!=");                           \
  Macro(BANG_EQ_EQ, "!==");                       \
  Macro(BadInteger, "BadInteger");                \
  Macro(Barrier, "Barrier");                      \
  Macro(Binary, "Binary");                        \
  Macro(CARET, "^");                              \
  Macro(CARET_EQ, "^=");                          \
  Macro(CallMessage, "CallMessage");              \
  Macro(Channel, "Channel");                      \
  Macro(Code, "Code");                            \
  Macro(Constness, "Constness");                  \
  Macro(DOLLAR_IMPORT, "$IMPORT");                \
  Macro(DOLLAR_backtrace, "$backtrace");          \
  Macro(DOLLAR_for, "$for");                      \
  Macro(DOLLAR_getSlot, "$getSlot");              \
  Macro(DOLLAR_id, "$id");                        \
  Macro(DOLLAR_location, "$location");            \
  Macro(DOLLAR_objAddr, "$objAddr");              \
  Macro(DOLLAR_pattern, "$pattern");              \
  Macro(DOLLAR_setSlot, "$setSlot");              \
  Macro(DOLLAR_show, "$show");                    \
  Macro(DOLLAR_sn, "$sn");                        \
  Macro(DOLLAR_tmp, "$tmp");                      \
  Macro(DOLLAR_uobjectInUpdate, "$uobjectInUpdate");\
  Macro(Date, "Date");                            \
  Macro(Dictionary, "Dictionary");                \
  Macro(Directory, "Directory");                  \
  Macro(Duplicate, "Duplicate");                  \
  Macro(Duration, "Duration");                    \
  Macro(EQ_EQ, "==");                             \
  Macro(EQ_EQ_EQ, "===");                         \
  Macro(EQ_TILDA_EQ, "=~=");                      \
  Macro(Event, "Event");                          \
  Macro(EventHandler, "EventHandler");            \
  Macro(Exception, "Exception");                  \
  Macro(Executable, "Executable");                \
  Macro(File, "File");                            \
  Macro(FileNotFound, "FileNotFound");            \
  Macro(Finalizable, "Finalizable");              \
  Macro(Float, "Float");                          \
  Macro(FormatInfo, "FormatInfo");                \
  Macro(Formatter, "Formatter");                  \
  Macro(FunctionProfile, "FunctionProfile");      \
  Macro(GT, ">");                                 \
  Macro(GT_EQ, ">=");                             \
  Macro(GT_GT, ">>");                             \
  Macro(Global, "Global");                        \
  Macro(Hash, "Hash");                            \
  Macro(InputStream, "InputStream");              \
  Macro(IoService, "IoService");                  \
  Macro(Job, "Job");                              \
  Macro(KeyError, "KeyError");                    \
  Macro(LPAREN_RPAREN, "()");                     \
  Macro(LT, "<");                                 \
  Macro(LT_Code_GT, "<Code>");                    \
  Macro(LT_EQ, "<=");                             \
  Macro(LT_LT, "<<");                             \
  Macro(LT_empty_GT, "<empty>");                  \
  Macro(LT_exportable_SP_object_GT, "<exportable object>");\
  Macro(LT_profiled_GT, "<profiled>");            \
  Macro(Lazy, "Lazy");                            \
  Macro(List, "List");                            \
  Macro(Lobby, "Lobby");                          \
  Macro(Location, "Location");                    \
  Macro(Logger, "Logger");                        \
  Macro(Lookup, "Lookup");                        \
  Macro(MINUS, "-");                              \
  Macro(MINUS_EQ, "-=");                          \
  Macro(MINUS_MINUS, "--");                       \
  Macro(MINUS_MINUS_MINUS_MINUS_SP_event_SP_handler_SP_backtrace_COLON, "---- event handler backtrace:");\
  Macro(Matrix, "Matrix");                        \
  Macro(Name, "Name");                            \
  Macro(NegativeNumber, "NegativeNumber");        \
  Macro(NonPositiveNumber, "NonPositiveNumber");  \
  Macro(Object, "Object");                        \
  Macro(Orderable, "Orderable");                  \
  Macro(OutputStream, "OutputStream");            \
  Macro(PERCENT, "%");                            \
  Macro(PERCENT_EQ, "%=");                        \
  Macro(PIPE_PIPE, "||");                         \
  Macro(PLUS, "+");                               \
  Macro(PLUS_EQ, "+=");                           \
  Macro(PLUS_PLUS, "++");                         \
  Macro(Package, "Package");                      \
  Macro(Pair, "Pair");                            \
  Macro(Path, "Path");                            \
  Macro(Position, "Position");                    \
  Macro(Primitive, "Primitive");                  \
  Macro(Profile, "Profile");                      \
  Macro(PropertyLookup, "PropertyLookup");        \
  Macro(PseudoLazy, "PseudoLazy");                \
  Macro(Redefinition, "Redefinition");            \
  Macro(SBL_SBR, "[]");                           \
  Macro(SBL_SBR_EQ, "[]=");                       \
  Macro(SLASH, "/");                              \
  Macro(SLASH_EQ, "/=");                          \
  Macro(STAR, "*");                               \
  Macro(STAR_EQ, "*=");                           \
  Macro(STAR_STAR, "**");                         \
  Macro(Scheduling, "Scheduling");                \
  Macro(Semaphore, "Semaphore");                  \
  Macro(Serializables, "Serializables");          \
  Macro(Server, "Server");                        \
  Macro(Slot, "Slot");                            \
  Macro(Socket, "Socket");                        \
  Macro(StackFrame, "StackFrame");                \
  Macro(Stream, "Stream");                        \
  Macro(String, "String");                        \
  Macro(Subscription, "Subscription");            \
  Macro(Sym, "Sym");                              \
  Macro(Syntax, "Syntax");                        \
  Macro(System, "System");                        \
  Macro(TILDA_EQ, "~=");                          \
  Macro(Tag, "Tag");                              \
  Macro(Type, "Type");                            \
  Macro(UConnection, "UConnection");              \
  Macro(UObject, "UObject");                      \
  Macro(UValue, "UValue");                        \
  Macro(UVar, "UVar");                            \
  Macro(UnexpectedVoid, "UnexpectedVoid");        \
  Macro(Vector, "Vector");                        \
  Macro(__dec, "__dec");                          \
  Macro(__get, "__get");                          \
  Macro(__inc, "__inc");                          \
  Macro(__uobjectName, "__uobjectName");          \
  Macro(__uobject_base, "__uobject_base");        \
  Macro(__uobject_cname, "__uobject_cname");      \
  Macro(_exit, "_exit");                          \
  Macro(a, "a");                                  \
  Macro(abs, "abs");                              \
  Macro(absolute, "absolute");                    \
  Macro(acceptVoid, "acceptVoid");                \
  Macro(acceptedVoid, "acceptedVoid");            \
  Macro(acos, "acos");                            \
  Macro(acquire, "acquire");                      \
  Macro(active, "active");                        \
  Macro(addProto, "addProto");                    \
  Macro(addSystemFile, "addSystemFile");          \
  Macro(alignment, "alignment");                  \
  Macro(allProtos, "allProtos");                  \
  Macro(allUObjects, "allUObjects");              \
  Macro(alt, "alt");                              \
  Macro(appendRow, "appendRow");                  \
  Macro(apply, "apply");                          \
  Macro(args, "args");                            \
  Macro(arguments, "arguments");                  \
  Macro(asBarrier, "asBarrier");                  \
  Macro(asBool, "asBool");                        \
  Macro(asCode, "asCode");                        \
  Macro(asDate, "asDate");                        \
  Macro(asDictionary, "asDictionary");            \
  Macro(asDirectory, "asDirectory");              \
  Macro(asDuration, "asDuration");                \
  Macro(asEvent, "asEvent");                      \
  Macro(asEventHandler, "asEventHandler");        \
  Macro(asExecutable, "asExecutable");            \
  Macro(asFile, "asFile");                        \
  Macro(asFinalizable, "asFinalizable");          \
  Macro(asFloat, "asFloat");                      \
  Macro(asFormatInfo, "asFormatInfo");            \
  Macro(asFormatter, "asFormatter");              \
  Macro(asFunctionProfile, "asFunctionProfile");  \
  Macro(asGlobal, "asGlobal");                    \
  Macro(asHash, "asHash");                        \
  Macro(asInputStream, "asInputStream");          \
  Macro(asInteger, "asInteger");                  \
  Macro(asIoService, "asIoService");              \
  Macro(asJob, "asJob");                          \
  Macro(asList, "asList");                        \
  Macro(asLobby, "asLobby");                      \
  Macro(asLocation, "asLocation");                \
  Macro(asMatrix, "asMatrix");                    \
  Macro(asObject, "asObject");                    \
  Macro(asOutputStream, "asOutputStream");        \
  Macro(asPath, "asPath");                        \
  Macro(asPosition, "asPosition");                \
  Macro(asPrimitive, "asPrimitive");              \
  Macro(asPrintable, "asPrintable");              \
  Macro(asProfile, "asProfile");                  \
  Macro(asSemaphore, "asSemaphore");              \
  Macro(asServer, "asServer");                    \
  Macro(asSlot, "asSlot");                        \
  Macro(asSocket, "asSocket");                    \
  Macro(asStream, "asStream");                    \
  Macro(asString, "asString");                    \
  Macro(asSubscription, "asSubscription");        \
  Macro(asSystem, "asSystem");                    \
  Macro(asTag, "asTag");                          \
  Macro(asTopLevelPrintable, "asTopLevelPrintable");\
  Macro(asUConnection, "asUConnection");          \
  Macro(asUValue, "asUValue");                    \
  Macro(asVector, "asVector");                    \
  Macro(asfalse, "asfalse");                      \
  Macro(asin, "asin");                            \
  Macro(asnil, "asnil");                          \
  Macro(assertCall, "assertCall");                \
  Macro(astrue, "astrue");                        \
  Macro(asvoid, "asvoid");                        \
  Macro(asynchronous, "asynchronous");            \
  Macro(atan, "atan");                            \
  Macro(atan2, "atan2");                          \
  Macro(autoEval, "autoEval");                    \
  Macro(b, "b");                                  \
  Macro(back, "back");                            \
  Macro(backcast, "backcast");                    \
  Macro(base, "base");                            \
  Macro(basename, "basename");                    \
  Macro(begin, "begin");                          \
  Macro(binaryMode, "binaryMode");                \
  Macro(bitand, "bitand");                        \
  Macro(bitor, "bitor");                          \
  Macro(block, "block");                          \
  Macro(blockSubscriberException, "blockSubscriberException");\
  Macro(blocked, "blocked");                      \
  Macro(bodyString, "bodyString");                \
  Macro(breakpoint, "breakpoint");                \
  Macro(bytesReceived, "bytesReceived");          \
  Macro(bytesSent, "bytesSent");                  \
  Macro(c, "c");                                  \
  Macro(callCount, "callCount");                  \
  Macro(callMessage, "callMessage");              \
  Macro(calls, "calls");                          \
  Macro(cast, "cast");                            \
  Macro(categories, "categories");                \
  Macro(cd, "cd");                                \
  Macro(ceil, "ceil");                            \
  Macro(changed, "changed");                      \
  Macro(clear, "clear");                          \
  Macro(clearStats, "clearStats");                \
  Macro(clone, "clone");                          \
  Macro(close, "close");                          \
  Macro(closed, "closed");                        \
  Macro(code, "code");                            \
  Macro(collect_connection, "collect_connection");\
  Macro(column, "column");                        \
  Macro(columns, "columns");                      \
  Macro(combAdd, "combAdd");                      \
  Macro(combDiv, "combDiv");                      \
  Macro(combMul, "combMul");                      \
  Macro(combSub, "combSub");                      \
  Macro(combine, "combine");                      \
  Macro(compactName, "compactName");              \
  Macro(compl, "compl");                          \
  Macro(connect, "connect");                      \
  Macro(connectSerial, "connectSerial");          \
  Macro(connected, "connected");                  \
  Macro(connection, "connection");                \
  Macro(connectionTag, "connectionTag");          \
  Macro(constant, "constant");                    \
  Macro(content, "content");                      \
  Macro(contentChanged, "contentChanged");        \
  Macro(copyOnWrite, "copyOnWrite");              \
  Macro(cos, "cos");                              \
  Macro(create, "create");                        \
  Macro(createAll, "createAll");                  \
  Macro(createIdentity, "createIdentity");        \
  Macro(createOnes, "createOnes");                \
  Macro(createScalars, "createScalars");          \
  Macro(createSlot, "createSlot");                \
  Macro(createZeros, "createZeros");              \
  Macro(criticalSection, "criticalSection");      \
  Macro(current, "current");                      \
  Macro(cwd, "cwd");                              \
  Macro(cycle, "cycle");                          \
  Macro(data, "data");                            \
  Macro(day, "day");                              \
  Macro(dead, "dead");                            \
  Macro(debug, "debug");                          \
  Macro(defaultFinalize, "defaultFinalize");      \
  Macro(detach, "detach");                        \
  Macro(digits, "digits");                        \
  Macro(digits10, "digits10");                    \
  Macro(dirname, "dirname");                      \
  Macro(disable, "disable");                      \
  Macro(disconnect, "disconnect");                \
  Macro(disconnected, "disconnected");            \
  Macro(distance, "distance");                    \
  Macro(distanceMatrix, "distanceMatrix");        \
  Macro(done, "done");                            \
  Macro(dot_times, "dot_times");                  \
  Macro(dump, "dump");                            \
  Macro(each, "each");                            \
  Macro(each_AMPERSAND, "each&");                 \
  Macro(each_PIPE, "each|");                      \
  Macro(eachi, "eachi");                          \
  Macro(elementAdded, "elementAdded");            \
  Macro(elementChanged, "elementChanged");        \
  Macro(elementRemoved, "elementRemoved");        \
  Macro(emit, "emit");                            \
  Macro(empty, "empty");                          \
  Macro(enable, "enable");                        \
  Macro(enableRTP, "enableRTP");                  \
  Macro(enableStats, "enableStats");              \
  Macro(enabled, "enabled");                      \
  Macro(end, "end");                              \
  Macro(enter, "enter");                          \
  Macro(enterEvent, "enterEvent");                \
  Macro(env, "env");                              \
  Macro(epoch, "epoch");                          \
  Macro(epsilon, "epsilon");                      \
  Macro(erase, "erase");                          \
  Macro(err, "err");                              \
  Macro(error, "error");                          \
  Macro(eval, "eval");                            \
  Macro(evalArgs, "evalArgs");                    \
  Macro(event, "event");                          \
  Macro(exceptionHandlerTag, "exceptionHandlerTag");\
  Macro(exists, "exists");                        \
  Macro(exitSignal, "exitSignal");                \
  Macro(exitStatus, "exitStatus");                \
  Macro(exited, "exited");                        \
  Macro(exp, "exp");                              \
  Macro(extract, "extract");                      \
  Macro(extractAsToplevelPrintable, "extractAsToplevelPrintable");\
  Macro(fallback, "fallback");                    \
  Macro(false, "false");                          \
  Macro(fast, "fast");                            \
  Macro(file, "file");                            \
  Macro(fileCreated, "fileCreated");              \
  Macro(fileDeleted, "fileDeleted");              \
  Macro(finalize, "finalize");                    \
  Macro(find, "find");                            \
  Macro(findSlot, "findSlot");                    \
  Macro(findUObject, "findUObject");              \
  Macro(floor, "floor");                          \
  Macro(flush, "flush");                          \
  Macro(format, "format");                        \
  Macro(freeze, "freeze");                        \
  Macro(frize, "frize");                          \
  Macro(fresh, "fresh");                          \
  Macro(fromAscii, "fromAscii");                  \
  Macro(front, "front");                          \
  Macro(frozen, "frozen");                        \
  Macro(funCall, "funCall");                      \
  Macro(function, "function");                    \
  Macro(get, "get");                              \
  Macro(getAutoRead, "getAutoRead");              \
  Macro(getChar, "getChar");                      \
  Macro(getImports, "getImports");                \
  Macro(getIoService, "getIoService");            \
  Macro(getLine, "getLine");                      \
  Macro(getLocalSlot, "getLocalSlot");            \
  Macro(getLocalSlotValue, "getLocalSlotValue");  \
  Macro(getLocale, "getLocale");                  \
  Macro(getParent, "getParent");                  \
  Macro(getProperty, "getProperty");              \
  Macro(getSlot, "getSlot");                      \
  Macro(getSlotValue, "getSlotValue");            \
  Macro(getSVal,      "getSVal");                 \
  Macro(getStats, "getStats");                    \
  Macro(get_get, "get_get");                      \
  Macro(getenv, "getenv");                        \
  Macro(getter, "getter");                        \
  Macro(group, "group");                          \
  Macro(handleDisconnect, "handleDisconnect");    \
  Macro(has, "has");                              \
  Macro(hasLocalSlot, "hasLocalSlot");            \
  Macro(hasNot, "hasNot");                        \
  Macro(hasProperty, "hasProperty");              \
  Macro(hasSlot, "hasSlot");                      \
  Macro(hasSubscribers, "hasSubscribers");        \
  Macro(hash, "hash");                            \
  Macro(hookChangedEvent, "hookChangedEvent");    \
  Macro(host, "host");                            \
  Macro(hostName, "hostName");                    \
  Macro(hour, "hour");                            \
  Macro(inf, "inf");                              \
  Macro(init, "init");                            \
  Macro(initenv, "initenv");                      \
  Macro(inputPort, "inputPort");                  \
  Macro(insert, "insert");                        \
  Macro(insertBack, "insertBack");                \
  Macro(insertFront, "insertFront");              \
  Macro(instances, "instances");                  \
  Macro(interactive, "interactive");              \
  Macro(invalidate, "invalidate");                \
  Macro(inverse, "inverse");                      \
  Macro(isA, "isA");                              \
  Macro(isAlnum, "isAlnum");                      \
  Macro(isAlpha, "isAlpha");                      \
  Macro(isAscii, "isAscii");                      \
  Macro(isBlank, "isBlank");                      \
  Macro(isCntrl, "isCntrl");                      \
  Macro(isConnected, "isConnected");              \
  Macro(isDigit, "isDigit");                      \
  Macro(isDir, "isDir");                          \
  Macro(isGraph, "isGraph");                      \
  Macro(isInf, "isInf");                          \
  Macro(isLower, "isLower");                      \
  Macro(isNan, "isNan");                          \
  Macro(isPrint, "isPrint");                      \
  Macro(isPunct, "isPunct");                      \
  Macro(isReg, "isReg");                          \
  Macro(isSpace, "isSpace");                      \
  Macro(isSystemLocation, "isSystemLocation");    \
  Macro(isUpper, "isUpper");                      \
  Macro(isVoid, "isVoid");                        \
  Macro(isXdigit, "isXdigit");                    \
  Macro(jobs, "jobs");                            \
  Macro(join, "join");                            \
  Macro(keys, "keys");                            \
  Macro(keywords, "keywords");                    \
  Macro(kill, "kill");                            \
  Macro(lang, "lang");                            \
  Macro(lastCall, "lastCall");                    \
  Macro(lastModifiedDate, "lastModifiedDate");    \
  Macro(leave, "leave");                          \
  Macro(leaveEvent, "leaveEvent");                \
  Macro(level, "level");                          \
  Macro(limits, "limits");                        \
  Macro(line, "line");                            \
  Macro(lines, "lines");                          \
  Macro(listen, "listen");                        \
  Macro(listenPort, "listenPort");                \
  Macro(loadFile, "loadFile");                    \
  Macro(loadLibrary, "loadLibrary");              \
  Macro(loadModule, "loadModule");                \
  Macro(loaded, "loaded");                        \
  Macro(lobby, "lobby");                          \
  Macro(localHost, "localHost");                  \
  Macro(localPort, "localPort");                  \
  Macro(localSlotNames, "localSlotNames");        \
  Macro(locateSlot, "locateSlot");                \
  Macro(log, "log");                              \
  Macro(makeServer, "makeServer");                \
  Macro(makeSocket, "makeSocket");                \
  Macro(match, "match");                          \
  Macro(matches, "matches");                      \
  Macro(max, "max");                              \
  Macro(maxCallTime, "maxCallTime");              \
  Macro(maxExponent, "maxExponent");              \
  Macro(maxExponent10, "maxExponent10");          \
  Macro(maxFunctionCallDepth, "maxFunctionCallDepth");\
  Macro(maxParallelEvents, "maxParallelEvents");  \
  Macro(message, "message");                      \
  Macro(microsecond, "microsecond");              \
  Macro(min, "min");                              \
  Macro(minCallTime, "minCallTime");              \
  Macro(minExponent, "minExponent");              \
  Macro(minExponent10, "minExponent10");          \
  Macro(minInterval, "minInterval");              \
  Macro(minute, "minute");                        \
  Macro(month, "month");                          \
  Macro(name, "name");                            \
  Macro(nan, "nan");                              \
  Macro(new, "new");                              \
  Macro(newFlowControl, "newFlowControl");        \
  Macro(newPropertyHook, "newPropertyHook");      \
  Macro(nil, "nil");                              \
  Macro(noVoidError, "noVoidError");              \
  Macro(nonInterruptible, "nonInterruptible");    \
  Macro(norm, "norm");                            \
  Macro(now, "now");                              \
  Macro(oget, "oget");                            \
  Macro(oget_get, "oget_get");                    \
  Macro(onEnter, "onEnter");                      \
  Macro(onEvent, "onEvent");                      \
  Macro(onLeave, "onLeave");                      \
  Macro(onSubscribe, "onSubscribe");              \
  Macro(open, "open");                            \
  Macro(openFile, "openFile");                    \
  Macro(oset, "oset");                            \
  Macro(oset_get, "oset_get");                    \
  Macro(outputValue, "outputValue");              \
  Macro(owned, "owned");                          \
  Macro(package, "package");                      \
  Macro(pad, "pad");                              \
  Macro(parent, "parent");                        \
  Macro(pattern, "pattern");                      \
  Macro(payload, "payload");                      \
  Macro(period, "period");                        \
  Macro(periodicCall, "periodicCall");            \
  Macro(poll, "poll");                            \
  Macro(pollFor, "pollFor");                      \
  Macro(pollLoop, "pollLoop");                    \
  Macro(pollOneFor, "pollOneFor");                \
  Macro(port, "port");                            \
  Macro(precision, "precision");                  \
  Macro(prefix, "prefix");                        \
  Macro(print, "print");                          \
  Macro(priority, "priority");                    \
  Macro(processing, "processing");                \
  Macro(profile, "profile");                      \
  Macro(programName, "programName");              \
  Macro(properties, "properties");                \
  Macro(protos, "protos");                        \
  Macro(ps, "ps");                                \
  Macro(pushPullCheck, "pushPullCheck");          \
  Macro(put, "put");                              \
  Macro(quit, "quit");                            \
  Macro(radix, "radix");                          \
  Macro(random, "random");                        \
  Macro(rangemax, "rangemax");                    \
  Macro(rangemin, "rangemin");                    \
  Macro(rank, "rank");                            \
  Macro(read, "read");                            \
  Macro(readOnce, "readOnce");                    \
  Macro(readable, "readable");                    \
  Macro(reboot, "reboot");                        \
  Macro(receive, "receive");                      \
  Macro(received, "received");                    \
  Macro(redefinitionMode, "redefinitionMode");    \
  Macro(refCount, "refCount");                    \
  Macro(release, "release");                      \
  Macro(remoteIP, "remoteIP");                    \
  Macro(remove, "remove");                        \
  Macro(removeAll_, "removeAll_");                \
  Macro(removeBack, "removeBack");                \
  Macro(removeById, "removeById");                \
  Macro(removeFront, "removeFront");              \
  Macro(removeLocalSlot, "removeLocalSlot");      \
  Macro(removeProperty, "removeProperty");        \
  Macro(removeProto, "removeProto");              \
  Macro(removeSlot, "removeSlot");                \
  Macro(removeTimer, "removeTimer");              \
  Macro(rename, "rename");                        \
  Macro(replace, "replace");                      \
  Macro(resetStats, "resetStats");                \
  Macro(resize, "resize");                        \
  Macro(reverse, "reverse");                      \
  Macro(rfind, "rfind");                          \
  Macro(round, "round");                          \
  Macro(row, "row");                              \
  Macro(rowAdd, "rowAdd");                        \
  Macro(rowDiv, "rowDiv");                        \
  Macro(rowMul, "rowMul");                        \
  Macro(rowNorm, "rowNorm");                      \
  Macro(rowSub, "rowSub");                        \
  Macro(rtp, "rtp");                              \
  Macro(run, "run");                              \
  Macro(runTo, "runTo");                          \
  Macro(scalarGE, "scalarGE");                    \
  Macro(scalarLE, "scalarLE");                    \
  Macro(scope, "scope");                          \
  Macro(searchFile, "searchFile");                \
  Macro(searchPath, "searchPath");                \
  Macro(second, "second");                        \
  Macro(seconds, "seconds");                      \
  Macro(selfTime, "selfTime");                    \
  Macro(selfTimePer, "selfTimePer");              \
  Macro(send, "send");                            \
  Macro(sender, "sender");                        \
  Macro(seq, "seq");                              \
  Macro(set, "set");                              \
  Macro(setAutoRead, "setAutoRead");              \
  Macro(setConstSlotValue, "setConstSlotValue");  \
  Macro(setHubUpdate, "setHubUpdate");            \
  Macro(setLocale, "setLocale");                  \
  Macro(setOutputValue, "setOutputValue");        \
  Macro(setPriority, "setPriority");              \
  Macro(setProperty, "setProperty");              \
  Macro(setRow, "setRow");                        \
  Macro(setSlot, "setSlot");                      \
  Macro(setSlotValue, "setSlotValue");            \
  Macro(setSystemFiles, "setSystemFiles");        \
  Macro(setTimer, "setTimer");                    \
  Macro(setTrace, "setTrace");                    \
  Macro(setUpdate, "setUpdate");                  \
  Macro(set_get, "set_get");                      \
  Macro(setenv, "setenv");                        \
  Macro(setter, "setter");                        \
  Macro(shell, "shell");                          \
  Macro(shiftedTime, "shiftedTime");              \
  Macro(shutdown, "shutdown");                    \
  Macro(sigint_interrupt, "sigint_interrupt");    \
  Macro(sigint_shutdown, "sigint_shutdown");      \
  Macro(sign, "sign");                            \
  Macro(signal, "signal");                        \
  Macro(signalAll, "signalAll");                  \
  Macro(signaled, "signaled");                    \
  Macro(sin, "sin");                              \
  Macro(size, "size");                            \
  Macro(sizeChanged, "sizeChanged");              \
  Macro(sleep, "sleep");                          \
  Macro(slotAdded, "slotAdded");                  \
  Macro(slotNames, "slotNames");                  \
  Macro(slotRemoved, "slotRemoved");              \
  Macro(sockets, "sockets");                      \
  Macro(solve, "solve");                          \
  Macro(sort, "sort");                            \
  Macro(source, "source");                        \
  Macro(spawn, "spawn");                          \
  Macro(spec, "spec");                            \
  Macro(split, "split");                          \
  Macro(sqrt, "sqrt");                            \
  Macro(srandom, "srandom");                      \
  Macro(stats, "stats");                          \
  Macro(status, "status");                        \
  Macro(stderr, "stderr");                        \
  Macro(stdin, "stdin");                          \
  Macro(stdout, "stdout");                        \
  Macro(stop, "stop");                            \
  Macro(stopall, "stopall");                      \
  Macro(subscribe, "subscribe");                  \
  Macro(subscribers, "subscribers");              \
  Macro(sum, "sum");                              \
  Macro(syncEmit, "syncEmit");                    \
  Macro(syncTrigger, "syncTrigger");              \
  Macro(syncWrite, "syncWrite");                  \
  Macro(system, "system");                        \
  Macro(systemFiles, "systemFiles");              \
  Macro(tags, "tags");                            \
  Macro(tail, "tail");                            \
  Macro(tan, "tan");                              \
  Macro(target, "target");                        \
  Macro(terminate, "terminate");                  \
  Macro(throwNew, "throwNew");                    \
  Macro(time, "time");                            \
  Macro(timeReference, "timeReference");          \
  Macro(timeShift, "timeShift");                  \
  Macro(timestamp, "timestamp");                  \
  Macro(toAscii, "toAscii");                      \
  Macro(toLower, "toLower");                      \
  Macro(toUpper, "toUpper");                      \
  Macro(topLevel, "topLevel");                    \
  Macro(totalCallTime, "totalCallTime");          \
  Macro(totalCalls, "totalCalls");                \
  Macro(totalTime, "totalTime");                  \
  Macro(trace, "trace");                          \
  Macro(traceBind, "traceBind");                  \
  Macro(traceGet, "traceGet");                    \
  Macro(traceSet, "traceSet");                    \
  Macro(transpose, "transpose");                  \
  Macro(trigger, "trigger");                      \
  Macro(true, "true");                            \
  Macro(trueIndexes, "trueIndexes");              \
  Macro(trunc, "trunc");                          \
  Macro(type, "type");                            \
  Macro(uid, "uid");                              \
  Macro(unblock, "unblock");                      \
  Macro(unb, "unb");                              \
  Macro(unfreeze, "unfreeze");                    \
  Macro(unsetenv, "unsetenv");                    \
  Macro(unsubscribeFaultySubscriber, "unsubscribeFaultySubscriber");\
  Macro(uobjectInit, "uobjectInit");              \
  Macro(uobjects, "uobjects");                    \
  Macro(update, "update");                        \
  Macro(updateHook, "updateHook");                \
  Macro(updateSlot, "updateSlot");                \
  Macro(update_timed, "update_timed");            \
  Macro(uppercase, "uppercase");                  \
  Macro(urbiDocDir, "urbiDocDir");                \
  Macro(urbiLibrarySuffix, "urbiLibrarySuffix");  \
  Macro(urbiRoot, "urbiRoot");                    \
  Macro(urbiShareDir, "urbiShareDir");            \
  Macro(us, "us");                                \
  Macro(uvalueDeserialize, "uvalueDeserialize");  \
  Macro(uvalueSerialize, "uvalueSerialize");      \
  Macro(v, "v");                                  \
  Macro(value, "value");                          \
  Macro(version, "version");                      \
  Macro(void, "void");                            \
  Macro(wait, "wait");                            \
  Macro(waitForTermination, "waitForTermination");\
  Macro(waitUntilStopped, "waitUntilStopped");    \
  Macro(waituntil, "waituntil");                  \
  Macro(wallClockTime, "wallClockTime");          \
  Macro(warn, "warn");                            \
  Macro(watchIncompatible, "watchIncompatible");  \
  Macro(width, "width");                          \
  Macro(writable, "writable");                    \
  Macro(write, "write");                          \
  Macro(x, "x");                                  \
  Macro(y, "y");                                  \
  Macro(year, "year");                            \
  Macro(yields, "yields");                        \
  Macro(z, "z");                                  \
  /* Backslash terminator. */

#endif // !URBI_OBJECT_PRECOMPILED_SYMBOLS_HH
